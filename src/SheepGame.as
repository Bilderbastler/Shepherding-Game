package {	import Characters.*;		import Events.*;		import Interface.ResultSign;	import Interface.TutorialShepard;	import Interface.menuLeiste;		import MapElements.Map;		import fl.transitions.Tween;	import fl.transitions.TweenEvent;	import fl.transitions.easing.Regular;		import flash.display.MovieClip;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.utils.Timer;		public class SheepGame extends MovieClip	{		// globale Punktzahl des gesammten Spiels		private var totalPoints:uint;				// wurde das Spiel gewonnen?		private var isVictory:Boolean;				// die Levelnummer		private var levelNumber:uint;				// die gesammte anzahl an leveln		private var totalLevelNumber:uint;				// das geladene Level		private var level:Map;				// das User Interface		private var ui : menuLeiste;				// die Punktzahl		private var points:uint;				// das Zeitlimit in sekunden		private const timeLimit:uint = 120;				// der Spielzeit-Timer		private var gameTimer:Timer;				// dist as Spiel ist in diesem Loopdurchgang zuende gegangen?		private var gameOver:Boolean;				// die Tutorial Tafel		private var shepard:TutorialShepard;				// startet das Spiel, sobald das Spielobjekt der Stage zugeordnet wurde		public function SheepGame() {			this.totalPoints = 0;			this.levelNumber = 1;			this.addEventListener(Event.ADDED_TO_STAGE, prepareGame);		}				private function prepareGame(e:Event):void		{				// entfernt den Event-Listener			this.removeEventListener(Event.ADDED_TO_STAGE, prepareGame);			// verhindert das ändern des Bildausschnitts			stage.scaleMode = StageScaleMode.NO_BORDER;			// lädt das angegebene Level			level = new Map(this.levelNumber); 			totalLevelNumber = level.totalFrames;			// zentriere das Bild auf den Hund			centerMap();			// Zeige das Level an			this.addChild(level);			//setze die Punktzahl			this.points = 0;						// lade des Benutzer-Interface			loadUI();						if(levelNumber == 1){				showTutorial();			}else{				startGame();			}					}				private function startGame():void{			//schicke den Hund los, wenn geklickt wird			stage.addEventListener(MouseEvent.CLICK, level.getDog().sendDog);						stage.addEventListener(GameEvent.NEW_POINTS, ui.updatePoints);						//erzeugt den Timer für die Spielzeit			gameTimer = new Timer(1000, this.timeLimit);			gameTimer.addEventListener(TimerEvent.TIMER, ui.updateTime);			gameTimer.addEventListener(TimerEvent.TIMER_COMPLETE, setGameOver);			gameTimer.start();						// überprüfe, ob sich der Punktestand geändert hat			this.addEventListener(GameEvent.NEW_POINTS, function(e:GameEvent):void{				this.points += e.points;			});			// entfernt ein Schaf, falls es geschoren wird			this.addEventListener(SheepEvent.SHEEP_REMOVED,level.shaveSheep);			this.addEventListener(SheepEvent.SHEEP_LOST, level.killSheep);			this.addEventListener(SheepEvent.SHEEP_REMOVED, ui.miniMap.removeSheepIcon);			this.addEventListener(SheepEvent.SHEEP_LOST, ui.miniMap.removeSheepIcon);			// überprüfe, ob das Spiel zuende ist, wenn sich die anzahl der Schafe ändert			this.addEventListener("NO_MORE_SHEEP", setGameOver);						//starte den GameLoop, der bei jedem Frame ausgeführt wird			this.addEventListener(Event.ENTER_FRAME, gameLoop);		}				private function showTutorial():void{			this.shepard = new TutorialShepard();			this.addChild(shepard);			stage.addEventListener(MouseEvent.CLICK, hideTutorial);		}				private function hideTutorial(e:MouseEvent):void{				stage.removeEventListener(MouseEvent.CLICK, hideTutorial);				var game:MovieClip = this;				var tween1:Tween = new Tween(shepard, 'x', Regular.easeOut, shepard.x, shepard.x-shepard.width -100, 1.5, true);				tween1.addEventListener(TweenEvent.MOTION_FINISH, function(e:Event):void{						game.removeChild(shepard);				});				var tween2:Tween = new Tween(ui, 'alpha', Regular.easeOut, ui.alpha, 1.0, 1.5, true);				startGame();						}				// alle Aktionen, die jeden Frame wiederholt werden müssen		private function gameLoop(e:Event):void{						//zentriert die Karte			centerMap();									// prüft jeden Frame, ob der Hund gegen ein Hinderniss gelaufen ist.			level.getDog().dogCollision();						// gehe alle Schafe durch			var i:uint = 0;			for each (var sheep:Sheep in level.getSheeps()){								// gucke jeden Frame, ob der Hund in der Nähe ist				sheep.checkDogDistance();								// überprüfe, ob das Schaf gegen etwas gegen läuft				sheep.checkCollisionSheep(i);								i++			}						//prüfe, ob diese Runde das Spiel zu ende gegangen ist			if(this.gameOver){				this.removeEventListener(Event.ENTER_FRAME, gameLoop);				this.endGame();			}					}				// legt fest, dass am ende des aktuellen Gameloop Durchgang das Spiel beendet wird		private function setGameOver(e:Event):void{			this.gameOver = true;		}				// entfernt alle Spielelemente und Events und stelle fest, ob das Level erfolgreich beendet wurde		public function endGame():void{			// sind alle Schafe eingesammelt worden?			if(this.level.getSheeps().length > 0){				this.isVictory = false;			}else{				this.isVictory = true;			}			//entferne Eventlistener			stage.removeEventListener(MouseEvent.CLICK, level.getDog().sendDog);			stage.removeEventListener(GameEvent.NEW_POINTS, ui.updatePoints);			gameTimer.removeEventListener(TimerEvent.TIMER_COMPLETE, setGameOver);			this.removeEventListener("NO_MORE_SHEEP", setGameOver);			gameTimer.removeEventListener(TimerEvent.TIMER, ui.updateTime);			this.removeEventListener(SheepEvent.SHEEP_REMOVED,level.shaveSheep);			this.removeEventListener(SheepEvent.SHEEP_LOST, level.killSheep);			this.removeEventListener(SheepEvent.SHEEP_REMOVED, ui.miniMap.removeSheepIcon);			this.removeEventListener(SheepEvent.SHEEP_LOST, ui.miniMap.removeSheepIcon);									// entferne  alle Anzeigeobjekte und lösche die Verweise			this.removeChild(ui);			this.ui.closeUI();			ui = null;						// um alle Bewegungs Events zu löschen werden alle Tiere gestoppt			level.destroyMap();						this.removeChild(level);			level = null;						//wirft Event zum Menu System hoch mit den erreichten Punkten			this.dispatchEvent(new GameEvent(GameEvent.END_GAME,this.points));						// zwischenlösung: 			if(this.isVictory){				this.levelNumber++;			}			this.gameOver = false;						showResults();		}				// zeigt den Endbildschirm nach Ende eines Levels		private function showResults():void{			var result:ResultSign = new ResultSign();			if(isVictory){				if (this.levelNumber > this.totalLevelNumber){					result.gotoAndStop(3);				}else{					result.gotoAndStop(1);					stage.addEventListener(MouseEvent.CLICK, hideResults);							}			}else{				stage.addEventListener(MouseEvent.CLICK, hideResults);							result.gotoAndStop(2);			}			this.addChild(result);		}				// lässt das Bild mit den Ergebnissen wieder verschwinden und startet das neue Level		private function hideResults(e:Event):void{			this.removeChildAt(0);			stage.removeEventListener(MouseEvent.CLICK, hideResults);						prepareGame(null);		}				// erzeugt das untere Menu		private function loadUI():void {			 			// erzeuge Menu-Grafik			ui = new menuLeiste(level, timeLimit);			ui.y = stage.stageHeight;			ui.x = (stage.stageWidth * 0.5);			if(levelNumber == 1){				ui.alpha = 0.0;			}			this.addChild(ui);					}				// den Bildausschnitt auf den Hund fokussieren.		private function centerMap():void{			level.x = -level.getDog().x + stage.stageWidth /2;			level.y = -level.getDog().y + stage.stageHeight / 2 - 100;		}			}}