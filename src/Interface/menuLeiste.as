package Interface {	import Events.GameEvent;
	
	import MapElements.Map;
	
	import flash.display.DisplayObject;
	import flash.display.MovieClip;
	import flash.events.Event;
	import flash.events.TimerEvent;
	import flash.utils.Timer;
	/**	 * @author neumeister	 */	public class menuLeiste extends MovieClip {				private var pointsSign:PointsSign;		private var timeWool:BagOfWool;		private var currentPoints:uint;		private var currentTime:uint;		public var miniMap:MiniMap;				public function menuLeiste(map:Map, timeLimit:uint) {						this.currentTime = timeLimit;			createMiniMap(map);						this.addEventListener(Event.ADDED_TO_STAGE, initUI);								}				private function initUI(e:Event):void{			createPointField(); 			createTimeField();			this.removeEventListener(Event.ADDED_TO_STAGE, initUI);		}				// erzeugt das Textfeld für die Punktetafel		private function createPointField():void{			// referenziert die Points-Instanz aus dem Flashprojekt			for(var i:int = 0; i < this.numChildren; i++){				if(this.getChildAt(i) is PointsSign){					break;				}			}			pointsSign = this.getChildAt(i) as PointsSign;		}				// erzeugt die Texttafel für die verbleibende Zeit		private function createTimeField():void{			this.timeWool = new BagOfWool(currentTime);			this.timeWool.x =  this.width / -4.0;			this.timeWool.y =  -30;			this.addChild(timeWool);			this.swapChildren(this.getChildAt(this.numChildren-2), timeWool);					}				// erzeugt die Minikarte		private function createMiniMap(map:Map):void{			miniMap = new MiniMap(map);			this.addChildAt(miniMap, 0);			var mask:DisplayObject = this.getChildAt(2);			miniMap.x = mask.x + mask.width / 2 - miniMap.width / 2;			miniMap.y = mask.y + mask.height / 2 - miniMap.height / 2;						var water:MapWater = new MapWater();			water.scaleX = 0.2;			water.scaleY = 0.2;			water.x = mask.x;			water.y = mask.y;			this.addChildAt(water, 0);			water.mask = mask;		}				//aktuallisiert die Zeitanzeige		public function updateTime(e:TimerEvent):void{			this.currentTime --;			timeWool.scaleAndRotate(currentTime);		//	this.timeText.text = String(this.currentTime);		}				// aktuallisiert die Punkteanzeige		public function updatePoints(e:GameEvent):void{			this.currentPoints += e.points;			//this.pointsText.text = String(currentPoints);			this.pointsSign.setPoints(currentPoints);		}				// löscht alle ui-Elemente		public function closeUI():void{			this.removeChild(pointsSign);			this.pointsSign = null;			this.removeChild(timeWool);			this.timeWool = null;			this.removeChild(miniMap);			this.miniMap.closeMiniMap();			this.miniMap = null;		}			}}